import {
  Link,
  Button,
  Checkbox,
  Select,
  MenuItem,
  Slider,
  TextField,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  MenuList,
  Dialog,
  LinearProgress,
  Switch,
} from '@mui/material';
import { DatePicker, DateTimePicker } from '@mui/x-date-pickers';
export const X = {
  // checkbox: ({ type, ...props }) => <input type="checkbox" {...props}></input>,
  // color: ({ type, ...props }) => <input type="color" {...props}></input>,
  date: DatePicker,
  datetimeLocal: DateTimePicker,
  // email: ({ type, ...props }) => <input type="email" {...props}></input>,
  // file: ({ type, ...props }) => <input type="file" {...props}></input>,
  // hidden: ({ type, ...props }) => <input type="hidden" {...props}></input>,
  // month: ({ type, ...props }) => <input type="month" {...props}></input>,
  // number: ({ type, ...props }) => <input type="number" {...props}></input>,
  // password: ({ type, ...props }) => <input type="password" {...props}></input>,
  // radio: ({ type, ...props }) => <input type="radio" {...props}></input>,
  // range: ({ type, ...props }) => <input type="range" {...props}></input>,
  // search: ({ type, ...props }) => <input type="search" {...props}></input>,
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  submit: ({ children, ...props }: { children: any }) => (
    <Button type="submit" {...props}>
      {children}
    </Button>
  ),
  // tel: ({ type, ...props }) => <input type="tel" {...props}></input>,
  text: TextField,
  // time: ({ type, ...props }) => <input type="time" {...props}></input>,
  // url: ({ type, ...props }) => <input type="url" {...props}></input>,
  // week: ({ type, ...props }) => <input type="week" {...props}></input>,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  switch: ({ type, ...props }: { type: 'checkbox' }) => <Switch {...props} />,
};
export const MuiXHtml = {
  a: Link,
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: Button,
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: Accordion,
  dfn: 'dfn',
  dialog: Dialog,
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: ({ type, ...props }: { type: string }) => {
    if (type === 'checkbox') {
      return <Checkbox {...props}></Checkbox>;
    }
    if (type === 'range') {
      // <input type="range" id="volume" name="volume" min="0" max="11">
      return <Slider {...props} />;
    }
    return <input type={type} {...props}></input>;
  },
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label', // FormControlLabel
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: MenuList,
  menuitem: MenuItem,
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: MenuItem, // 'option', is it true?
  output: 'output',
  p: 'p',
  param: 'param',
  pre: 'pre',
  progress: LinearProgress,
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: Select, // 'select'
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: AccordionSummary,
  detailsContent: AccordionDetails,
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  var: 'var',
  video: 'video',
  wbr: 'wbr',
  ...X,
};
