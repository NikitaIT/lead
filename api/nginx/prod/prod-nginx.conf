user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$server_name - $remote_addr - $ssl_client_fingerprint - $ssl_client_s_dn - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;
  
  fastcgi_read_timeout 6000s;
  proxy_read_timeout 6000s;

  #gzip  on;

  ssl_protocols        TLSv1.2 TLSv1.3;
  ssl_certificate      /etc/ssl/certs/nginx.pem;
  ssl_certificate_key  /etc/ssl/private/nginx.key;
  ssl_password_file    /etc/ssl/private/nginx.pass;

  # client certificate
  ssl_client_certificate /etc/ssl/ca/ca.pem;
  ssl_verify_client       on;
  ssl_verify_depth 3;

  map_hash_max_size 26214;
  map_hash_bucket_size 26214;
  map $ssl_client_s_dn $allowded_certs_name {
    default 1;
    "CN=prod-lead-api,O=lead.com,C=EU" 0;
  }

  server {
    listen 00000 ssl; # docker-compose.services.[name].ports.[00000]/tcp
    server_name lead-api-nginx-tls-proxy;

    location / {
      # if the client-side certificate failed to authenticate, show a 496
      # message to the client

      if ($allowded_certs_name) {
        return 496;
      }

      proxy_max_temp_file_size 0;
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      proxy_pass          http://lead:00001; # should be same as api port
    }
  }

}
